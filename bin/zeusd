require "thor"
require "zeusd"

class ZeusdCLI < Thor
  class_option :verbose,  :type => :boolean,  :aliases => :v
  class_option :block,    :type => :boolean,  :aliases => :b
  class_option :cwd,      :type => :string

  desc "start", "Start the daemon."
  def start
    daemon.start!(:block => options[:block])
  end

  desc "restart", "Restart the daemon."
  def restart
    daemon.restart!(:block => options[:block])
  end

  desc "stop", "Stop the daemon."
  def stop
    daemon.stop!
  end

  desc "status", "Get the current status."
  method_option :follow, :type => :boolean, :aliases => :f
  def status
    trap("SIGINT") { exit! }
    queue = daemon.status_queue
    while output = queue.shift
      puts output
    end
  end

  desc "tail", "Tail the daemon's log."
  method_option :follow, :type => :boolean, :aliases => :f
  def tail
    exec "tail#{options[:follow] ? ' -f' : ''} -n 25 #{daemon.log_file.to_path}"
  end

  protected

  def daemon
    Zeusd::Daemon.new(:verbose => options[:verbose], :cwd => options[:cwd])
  end

end

ZeusdCLI.start(ARGV)
